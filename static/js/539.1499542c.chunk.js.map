{"version":3,"file":"static/js/539.1499542c.chunk.js","mappings":"kRAGaA,EAAiBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yLAU3BC,EAAaH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+DAMvBG,EAAgBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wCAK1BK,EAAaP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yEAMtBO,EAAYT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yEAMpBS,EAAWX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iGAOnBW,EAASb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,wEAMjBa,EAAaf,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,4DAMtBe,EAAajB,EAAAA,GAAAA,GAASkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kGAOtBiB,EAAUnB,EAAAA,GAAAA,GAASoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,+DAMnBmB,GAAYrB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAeuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,2R,SCtD3BsB,EAAY,SAAHC,GAOf,IANLC,EAAWD,EAAXC,YACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAQJ,EAARI,SACAC,EAAML,EAANK,OACAC,EAAKN,EAALM,MAEA,OACEC,EAAAA,EAAAA,MAACjC,EAAc,CAAAkC,SAAA,CACZP,GACCQ,EAAAA,EAAAA,KAAC/B,EAAU,CACTgC,IAAG,kCAAAC,OAAoCV,GACvCW,IAAI,kBAGNH,EAAAA,EAAAA,KAAA,QAAAD,SAAM,yBAERD,EAAAA,EAAAA,MAAC3B,EAAa,CAAA4B,SAAA,EACZC,EAAAA,EAAAA,KAAC3B,EAAU,CAAA0B,SAAEN,GAASC,KACtBI,EAAAA,EAAAA,MAACvB,EAAS,CAAAwB,SAAA,CAAC,gBAAsB,GAARF,GAAYO,QAAQ,GAAG,QAChDN,EAAAA,EAAAA,MAACrB,EAAQ,CAAAsB,SAAA,CAAC,aAAWJ,MACrBK,EAAAA,EAAAA,KAACrB,EAAM,CAAAoB,SAAC,YACRC,EAAAA,EAAAA,KAACnB,EAAU,CAAAkB,SACRH,GACCA,EAAOS,KAAI,SAAAC,GAAK,OACdN,EAAAA,EAAAA,KAACjB,EAAU,CAAAgB,SAAiBO,EAAMZ,MAAjBY,EAAMC,GAA6B,OAG1DT,EAAAA,EAAAA,MAACb,EAAO,CAAAc,SAAA,EACNC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACb,EAAS,CAACqB,GAAG,UAAST,SAAC,YAE1BC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACb,EAAS,CAACqB,GAAG,UAAST,SAAC,sBAMpC,E,8BCjDe,SAASU,IAAa,IAADC,EAAAC,EAC5BC,GAASC,EAAAA,EAAAA,MACfC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAOH,GAe3B,OAbAI,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAQvB,OARuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAE2BC,EAAAA,EAAAA,IAAWrB,EAAOL,IAAI,KAAD,EAAtCsB,EAAQC,EAAAI,KACdf,EAASU,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBM,QAAQC,IAAGP,EAAAK,IAAQ,eAAAL,EAAAC,KAAA,GAAAD,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,yBAGtBY,MAAA,KAAAC,UAAA,EATc,WACShB,EAAAe,MAAC,KAADC,UAAA,CASxBC,EACF,GAAG,CAAC9B,EAAOL,MAGTT,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAI,CAACnC,GAAmC,QAAjCE,EAA2B,QAA3BC,EAAEW,EAAYsB,QAAQC,aAAK,IAAAlC,OAAA,EAAzBA,EAA2BmC,YAAI,IAAApC,EAAAA,EAAI,IAAIX,SAAC,UAClDC,EAAAA,EAAAA,KAACV,EAAS,CACRE,YAAa0B,EAAM6B,YACnBtD,MAAOyB,EAAMzB,MACbC,KAAMwB,EAAMxB,KACZC,SAAUuB,EAAMvB,SAChBC,OAAQsB,EAAMtB,OACdC,MAAOqB,EAAM8B,gBAEfhD,EAAAA,EAAAA,KAACiD,EAAAA,GAAM,MAGb,C","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MoviePage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: auto;\n  display: block;\n`;\n\nexport const InfoContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 20px;\n  margin-bottom: 10px;\n  color: #f39c12;\n`;\n\nexport const UserScore = styled.p`\n  font-size: 14px;\n  color: #3498db;\n  margin-bottom: 10px;\n`;\n\nexport const Overview = styled.p`\n  font-size: 12px;\n  margin-bottom: 10px;\n  text-align: justify;\n  color: #bdc3c7;\n`;\n\nexport const Genres = styled.p`\n  font-size: 14px;\n  margin-bottom: 5px;\n  color: #2ecc71;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const GenresItem = styled.li`\n  font-size: 12px;\n  margin-right: 10px;\n  display: inline-block;\n  color: #bdc3c7;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  padding: 8px;\n  border-radius: 4px;\n  color: #f39c12;\n  transition: color 0.5s ease-in-out, background-color 0.5s ease-in-out,\n    text-decoration 0.5s ease-in-out;\n\n  &:hover {\n    text-decoration: none;\n    color: #3498db;\n    background-color: #34495e;\n  }\n`;\n","import {\n  Genres,\n  GenresItem,\n  GenresList,\n  InfoContainer,\n  MovieContainer,\n  MovieImage,\n  MovieLink,\n  MovieTitle,\n  NavList,\n  Overview,\n  UserScore,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  moviePoster,\n  title,\n  name,\n  overview,\n  genres,\n  score,\n}) => {\n  return (\n    <MovieContainer>\n      {moviePoster ? (\n        <MovieImage\n          src={`https://image.tmdb.org/t/p/w500${moviePoster}`}\n          alt=\"Movie Poster\"\n        />\n      ) : (\n        <span>No poster available</span>\n      )}\n      <InfoContainer>\n        <MovieTitle>{title || name}</MovieTitle>\n        <UserScore>User Score: {(score * 10).toFixed(0)}%</UserScore>\n        <Overview>Overview: {overview}</Overview>\n        <Genres>Genres</Genres>\n        <GenresList>\n          {genres &&\n            genres.map(genre => (\n              <GenresItem key={genre.id}>{genre.name}</GenresItem>\n            ))}\n        </GenresList>\n        <NavList>\n          <li>\n            <MovieLink to=\"credits\">Cast</MovieLink>\n          </li>\n          <li>\n            <MovieLink to=\"reviews\">Reviews</MovieLink>\n          </li>\n        </NavList>\n      </InfoContainer>\n    </MovieContainer>\n  );\n};\n","import { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { fetchMovie } from 'components/api';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nexport default function MoviePage() {\n  const params = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const newMovie = await fetchMovie(params.id);\n        setMovie(newMovie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    }\n    getMovies();\n  }, [params.id]);\n\n  return (\n    <div>\n      <Link to={backLinkRef.current.state?.from ?? '/'}>Back</Link>\n      <MovieInfo\n        moviePoster={movie.poster_path}\n        title={movie.title}\n        name={movie.name}\n        overview={movie.overview}\n        genres={movie.genres}\n        score={movie.vote_average}\n      />\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["MovieContainer","styled","_templateObject","_taggedTemplateLiteral","MovieImage","_templateObject2","InfoContainer","_templateObject3","MovieTitle","_templateObject4","UserScore","_templateObject5","Overview","_templateObject6","Genres","_templateObject7","GenresList","_templateObject8","GenresItem","_templateObject9","NavList","_templateObject10","MovieLink","NavLink","_templateObject11","MovieInfo","_ref","moviePoster","title","name","overview","genres","score","_jsxs","children","_jsx","src","concat","alt","toFixed","map","genre","id","to","MoviePage","_backLinkRef$current$","_backLinkRef$current$2","params","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","backLinkRef","useRef","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","newMovie","_context","prev","next","fetchMovie","sent","t0","console","log","finish","stop","apply","arguments","getMovies","Link","current","state","from","poster_path","vote_average","Outlet"],"sourceRoot":""}