{"version":3,"file":"static/js/548.128fb4c1.chunk.js","mappings":"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","sources":["components/MovieForm/MovieForm.styled.js","components/MovieForm/MovieForm.jsx","components/SearchedMovies/SearchedMovies.styled.js","components/SearchedMovies/SearchedMovies.jsx","pages/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as StyledForm,\n  Field as StyledField,\n  ErrorMessage as StyledError,\n} from 'formik';\n\nexport const Form = styled(StyledForm)`\n  display: flex;\n  justify-content: center;\n  max-width: 400px;\n  height: 50px;\n  margin: 0 auto;\n`;\n\nexport const FormField = styled.label`\n  margin-bottom: 15px;\n`;\n\nexport const Field = styled(StyledField)`\n  width: 250px;\n  height: 40px;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #bdc3c7;\n  border-radius: 4px;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    border-color: #f1c40f;\n  }\n`;\n\nexport const FormButton = styled.button`\n  margin-left: 10px;\n  height: 40px;\n  background-color: #f1c40f;\n  color: #34495e;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    color: #3498db;\n    background-color: #34495e;\n  }\n`;\n\nexport const ErrorMessage = styled(StyledError)`\n  color: #e74c3c;\n  font-size: 14px;\n  margin-top: 5px;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ErrorMessage,\n  Field,\n  Form,\n  FormButton,\n  FormField,\n} from './MovieForm.styled';\n\nconst MovieSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n});\n\nexport const MovieForm = ({ submitClick }) => {\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          title: '',\n        }}\n        validationSchema={MovieSchema}\n        onSubmit={(values, actions) => {\n          actions.resetForm();\n          submitClick(values);\n        }}\n      >\n        <Form>\n          <FormField>\n            <Field name=\"title\" placeholder=\"your movie\" />\n            <ErrorMessage component={'span'} name=\"title\" />\n          </FormField>\n\n          <FormButton type=\"submit\">Search</FormButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SearchedContainer = styled.div`\n  margin: 0 auto;\n  background-color: #ecf0f1;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n  width: 400px;\n`;\n\nexport const SearchedList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-top: 20px;\n`;\n\nexport const SearchedItem = styled.li`\n  font-size: 14px;\n  margin-bottom: 8px;\n  color: #34495e;\n`;\n\nexport const SearchedLink = styled(Link)`\n  text-decoration: none;\n  color: #34495e;\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: #f1c40f;\n  }\n`;\n","import { MovieForm } from 'components/MovieForm/MovieForm';\nimport {\n  SearchedContainer,\n  SearchedItem,\n  SearchedLink,\n  SearchedList,\n} from './SearchedMovies.styled';\n\nexport const SearchedMovies = ({ onSubmit, movies, location }) => {\n  return (\n    <>\n      <SearchedContainer>\n        <MovieForm submitClick={onSubmit} />\n        <SearchedList>\n          {movies.map(movie => {\n            return (\n              <SearchedItem key={movie.id}>\n                <SearchedLink\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title || movie.name}\n                </SearchedLink>\n              </SearchedItem>\n            );\n          })}\n        </SearchedList>\n      </SearchedContainer>\n    </>\n  );\n};\n","import { SearchedMovies } from 'components/SearchedMovies/SearchedMovies';\nimport { fetchSearchMovie } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryNew = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryNew === '') {\n      return;\n    }\n\n    async function getMovies() {\n      const clearQuery = queryNew.split('/').pop();\n      try {\n        const newMovies = await fetchSearchMovie(clearQuery);\n\n        if (newMovies.length === 0) {\n          toast.error('No movie available');\n        } else {\n          setMovies(newMovies);\n        }\n      } catch (error) {\n      } finally {\n      }\n    }\n\n    getMovies();\n  }, [queryNew]);\n\n  const onSubmit = searchedQuery => {\n    setSearchParams({ query: `${Date.now()}/${searchedQuery.title}` });\n  };\n\n  return (\n    <SearchedMovies onSubmit={onSubmit} movies={movies} location={location} />\n  );\n}\n"],"names":["Form","styled","StyledForm","_templateObject","_taggedTemplateLiteral","FormField","_templateObject2","Field","StyledField","_templateObject3","FormButton","_templateObject4","ErrorMessage","StyledError","_templateObject5","MovieSchema","Yup","shape","title","required","MovieForm","_ref","submitClick","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","_jsxs","name","placeholder","component","type","SearchedContainer","SearchedList","SearchedItem","SearchedLink","Link","SearchedMovies","movies","location","_Fragment","map","movie","to","concat","id","state","from","MoviesPage","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryNew","get","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","clearQuery","newMovies","_context","prev","next","split","pop","fetchSearchMovie","sent","length","toast","t0","finish","stop","apply","arguments","getMovies","searchedQuery","query","Date","now"],"sourceRoot":""}