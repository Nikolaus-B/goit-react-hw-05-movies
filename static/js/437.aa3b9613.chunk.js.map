{"version":3,"file":"static/js/437.aa3b9613.chunk.js","mappings":"sQAGaA,EAAoBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uLAU9BC,EAAgBH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+FAOxBG,EAAeL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4DAMxBK,EAAeP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wEAMxBO,GAAeT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uI,SCxB3BU,EAAW,SAAHC,GAA8B,IAAxBC,EAAMD,EAANC,OAAQC,EAAQF,EAARE,SACjC,OACEC,EAAAA,EAAAA,MAACjB,EAAiB,CAAAkB,SAAA,EAChBC,EAAAA,EAAAA,KAACf,EAAa,CAAAc,SAAC,oBACfC,EAAAA,EAAAA,KAACb,EAAY,CAAAY,SACVH,EAAOK,KAAI,SAAAC,GACV,OACEF,EAAAA,EAAAA,KAACX,EAAY,CAAAU,UACXC,EAAAA,EAAAA,KAACT,EAAY,CACXY,GAAE,WAAAC,OAAaF,EAAMG,IACrBC,MAAO,CAAEC,KAAMV,GAAWE,SAEzBG,EAAMM,OAASN,EAAMO,QALPP,EAAMG,GAS7B,QAIR,E,wCCtBe,SAASK,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCf,EAAMiB,EAAA,GAAEE,EAASF,EAAA,GAClBhB,GAAWmB,EAAAA,EAAAA,MACjBC,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAkB1B,OAhBAG,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAWvB,OAXuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGoB,OAHpBF,EAAAC,KAAA,EAEIR,GAAW,GACXJ,GAAS,GAAOW,EAAAE,KAAA,GACQC,EAAAA,EAAAA,MAAsB,KAAD,EAAvCJ,EAASC,EAAAI,KACfpB,EAAUe,GAAWC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAErBX,GAAS,GAAM,QAEG,OAFHW,EAAAC,KAAA,GAEfR,GAAW,GAAOO,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,yBAErBU,MAAA,KAAAC,UAAA,EAZc,WACSd,EAAAa,MAAC,KAADC,UAAA,CAaxBC,EACF,GAAG,KAED3C,EAAAA,EAAAA,MAAA4C,EAAAA,SAAA,CAAA3C,SAAA,CACIoB,GAGAnB,EAAAA,EAAAA,KAAA,KAAG2C,MAAO,CAAEC,MAAO,YAAa7C,SAAC,wBAFjCC,EAAAA,EAAAA,KAACN,EAAQ,CAACE,OAAQA,EAAQC,SAAUA,IAKrC0B,IAAWvB,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,MAGzB,C","sources":["components/HomeList/HomeList.styled.js","components/HomeList/HomeList.jsx","pages/HomePage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TrendingContainer = styled.div`\n  margin: 0 auto;\n  background-color: #ecf0f1;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n  width: 400px;\n`;\n\nexport const TrendingTitle = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #2c3e50;\n`;\n\nexport const TrendingList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const TrendingItem = styled.li`\n  font-size: 14px;\n  margin-bottom: 8px;\n  color: #34495e;\n`;\n\nexport const TrendingLink = styled(Link)`\n  text-decoration: none;\n  color: #34495e;\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: #f1c40f;\n  }\n`;\n","import {\n  TrendingContainer,\n  TrendingItem,\n  TrendingLink,\n  TrendingList,\n  TrendingTitle,\n} from './HomeList.styled';\n\nexport const HomeList = ({ movies, location }) => {\n  return (\n    <TrendingContainer>\n      <TrendingTitle>Trending Today</TrendingTitle>\n      <TrendingList>\n        {movies.map(movie => {\n          return (\n            <TrendingItem key={movie.id}>\n              <TrendingLink\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.title || movie.name}\n              </TrendingLink>\n            </TrendingItem>\n          );\n        })}\n      </TrendingList>\n    </TrendingContainer>\n  );\n};\n","import { HomeList } from 'components/HomeList/HomeList';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchTrendingMovies } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setLoading(true);\n        setError(false);\n        const topMovies = await fetchTrendingMovies();\n        setMovies(topMovies);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getMovies();\n  }, []);\n  return (\n    <>\n      {!error ? (\n        <HomeList movies={movies} location={location} />\n      ) : (\n        <p style={{ color: ' #bdc3c7' }}>Try to reload page</p>\n      )}\n\n      {loading && <Loader />}\n    </>\n  );\n}\n"],"names":["TrendingContainer","styled","_templateObject","_taggedTemplateLiteral","TrendingTitle","_templateObject2","TrendingList","_templateObject3","TrendingItem","_templateObject4","TrendingLink","Link","_templateObject5","HomeList","_ref","movies","location","_jsxs","children","_jsx","map","movie","to","concat","id","state","from","title","name","HomePage","_useState","useState","_useState2","_slicedToArray","setMovies","useLocation","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","topMovies","_context","prev","next","fetchTrendingMovies","sent","t0","finish","stop","apply","arguments","getMovies","_Fragment","style","color","Loader"],"sourceRoot":""}